name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Se ejecutará cuando hagas push a la rama main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Configurar Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'  # Usa la misma versión de Python de tu proyecto

      - name: Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Crear directorio para estáticos en `staticfiles/`
        run: mkdir -p staticfiles

      - name: Ejecutar collectstatic
        run: |
          python manage.py collectstatic --noinput --verbosity 3
        env:
          DJANGO_SETTINGS_MODULE: "cheaf_test_tecnico.settings"
          DEBUG: "False"
          SECRET_KEY: ${{ secrets.SECRET_KEY }}


      - name: Instalar Fly.io CLI y configurar PATH
        run: |
          curl -L https://fly.io/install.sh | sh
          echo "$HOME/.fly/bin" >> $GITHUB_PATH  # Agrega Fly.io al PATH

      - name: Verificar instalación de Fly.io
        run: flyctl version

      - name: Autenticarse en Fly.io
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: flyctl auth token ${{ secrets.FLY_API_TOKEN }}

#      - name: Configurar variables de entorno en Fly.io
#        env:
#          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
#        run: |
#          flyctl secrets set REDIS_URL="redis://default:8d5f808c70664025a15a1d7b22d55719@fly-cheaf-test-tecnico-redis.upstash.io:6379"
#          flyctl secrets set CELERY_BROKER_URL="redis://default:8d5f808c70664025a15a1d7b22d55719@fly-cheaf-test-tecnico-redis.upstash.io:6379"
#          flyctl secrets set CELERY_RESULT_BACKEND="redis://default:8d5f808c70664025a15a1d7b22d55719@fly-cheaf-test-tecnico-redis.upstash.io:6379"

      - name: Deploy en Fly.io
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: FLY_API_TOKEN=${{ secrets.FLY_API_TOKEN }} flyctl deploy --remote-only

      - name: Ejecutar scripts después de la migración
        run: |
          flyctl ssh console --command "python manage.py create_superuser"
          flyctl ssh console --command "python xscripts/clean_db.py"
          flyctl ssh console --command "python xscripts/populate_db.py"
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
